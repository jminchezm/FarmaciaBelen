@model FarmaciaBelen.Models.PRODUCTO

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Editar Producto</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" />
</head>
<body class="bg-light">

    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8">
                <div class="card shadow">
                    <div class="card-header bg-warning text-white">
                        <h4><b>Editar Producto:</b> @Html.DisplayFor(model => model.PRODUCTO_ID)</h4>
                    </div>
                    <div class="card-body">

                        @using (Html.BeginForm("Edit", "Productos", FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.PRODUCTO_ID)

                            <div class="row mb-3">
                                <div class="col-md-4 fw-semibold"></div>
                                <div class="col-md-8">
                                    @if (!string.IsNullOrEmpty(Model.PRODUCTO_IMG))
                                    {
                                        <img src="@Url.Content(Model.PRODUCTO_IMG)" alt="Imagen actual" class="img-thumbnail" style="max-height: 200px;" />
                                    }
                                    else
                                    {
                                        <img src="@Url.Content("~/Content/ImagenesProductos/default.png")" alt="Imagen por defecto" class="img-thumbnail img-producto" style="max-height: 200px;" />
                                    }
                                </div>
                            </div>


                            <div class="mb-3">
                                <b>@Html.LabelFor(m => m.PRODUCTO_NOMBRE, new { @class = "form-label" })*</b>
                                @Html.EditorFor(m => m.PRODUCTO_NOMBRE, new { htmlAttributes = new
                           {
                               @class = "form-control",
                               maxlength = "100",
                               placeholder = "Ingrese el nombre (máximo 100 caracteres)"
                           } })
                                @Html.ValidationMessageFor(m => m.PRODUCTO_NOMBRE, "", new { @class = "text-danger" })
                            </div>



                            <div class="mb-3">
                                <b>@Html.LabelFor(m => m.PRODUCTO_DESCRIPCION, new { @class = "form-label" })*</b>
                                @Html.TextAreaFor(m => m.PRODUCTO_DESCRIPCION, new
                           {
                               @class = "form-control",
                               maxlength = "250",
                               rows = "4", // opcional: define cuántas filas visibles tiene el textarea
                               placeholder = "Ingrese la descripción (máximo 250 caracteres)"
                           })
                                @Html.ValidationMessageFor(m => m.PRODUCTO_DESCRIPCION, "", new { @class = "text-danger" })
                            </div>
                            <div class="mb-3">
                                <b>@Html.LabelFor(m => m.PRODUCTO_CASAMEDICA, new { @class = "form-label" })</b>
                                @Html.EditorFor(m => m.PRODUCTO_CASAMEDICA, new { htmlAttributes = new
                           {
                               @class = "form-control",
                               maxlength = "100",
                               placeholder = "Ingrese la casa medica (máximo 100 caracteres)"
                           } })
                                @Html.ValidationMessageFor(m => m.PRODUCTO_CASAMEDICA, "", new { @class = "text-danger" })
                            </div>



                            <div class="row">

                                <div class="col-md-6 mb-3">
                                    <b> @Html.LabelFor(m => m.FORMAFARMACEUTICA_ID, "Forma Farmacéutica", new { @class = "form-label" })*</b>
                                    @Html.DropDownList("FORMAFARMACEUTICA_ID", null, new { @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.FORMAFARMACEUTICA_ID, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-md-6 mb-3">
                                    <b>@Html.LabelFor(m => m.VIAADMINISTRACION_ID, "Vía de Administración", new { @class = "form-label" })*</b>
                                    @Html.DropDownList("VIAADMINISTRACION_ID", null, new { @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.VIAADMINISTRACION_ID, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="row">
                                <div class="col-md-6 mb-3">
                                    <b> @Html.LabelFor(m => m.SUBCATEGORIAPRODUCTO_ID, "Subcategoría", new { @class = "form-label" })*</b>
                                    @Html.DropDownList("SUBCATEGORIAPRODUCTO_ID", null, new { @class = "form-select" })
                                    @Html.ValidationMessageFor(m => m.SUBCATEGORIAPRODUCTO_ID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-6 mb-3">
                                    <div class="custom-file">
                                        <b> @Html.LabelFor(model => model.PRODUCTO_IMG, new { @class = "form-label" })</b>
                                        <input type="file" class="form-control d-none" id="imagen" name="imagen" accept=".jpg,.jpeg,.png,.gif" onchange="updateFileName()" />
                                        <label for="imagen" class="btn btn-outline-secondary w-100" id="customFileLabel">Cargue una imagen</label>
                                    </div>
                                </div>
                            </div>



                            <div class="mb-3">

                                <b>@Html.LabelFor(model => model.PRODUCTO_ESTADO, new { @class = "form-label" })*</b>
                                @Html.DropDownListFor(model => model.PRODUCTO_ESTADO,
                                    new SelectList(
                                        new List<SelectListItem>
                                        {
                                            new SelectListItem { Text = "Activo", Value = "Activo" },
                                            new SelectListItem { Text = "Inactivo", Value = "Inactivo" }
                                        },
                                        "Value",
                                        "Text",
                                        Model?.PRODUCTO_ESTADO ?? "Activo"
                                    ),
                                    htmlAttributes: new { @class = "form-select" })
                                @Html.ValidationMessageFor(model => model.PRODUCTO_ESTADO, "", new { @class = "text-danger" })
                            </div>





                            <div class="d-flex justify-content-between">
                                <a href="@Url.Action("Index")" class="btn btn-secondary">
                                    <i class="fas fa-arrow-left"></i> Cancelar
                                </a>
                                <button type="submit" class="btn btn-success">
                                    <i class="fas fa-save"></i> Guardar Cambios
                                </button>
                            </div>
                        }
                    </div>
                </div>
            </div>

        </div>

        <!-- Modal de confirmación -->
        <div class="modal fade" id="modalEditado" tabindex="-1">
            <div class="modal-dialog modal-dialog-centered">
                <div class="modal-content">
                    <div class="modal-header bg-success text-white">
                        <h5 class="modal-title">Producto actualizado</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">Los cambios fueron guardados correctamente.</div>
                    <div class="modal-footer">
                        <a href="@Url.Action("Index")" class="btn btn-secondary">Ir al listado</a>
                        <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Aceptar</button>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>


        @if (ViewBag.Editado != null && (bool)ViewBag.Editado)
        {
            <script>
                    document.addEventListener("DOMContentLoaded", function () {
                        new bootstrap.Modal(document.getElementById("modalEditado")).show();
                    });
            </script>
        }
        <script>
                function updateFileName() {
                    const input = document.getElementById('imagen');
                    const label = document.getElementById('customFileLabel');
                    if (input.files.length > 0) {
                        label.textContent = input.files[0].name;
                    } else {
                        label.textContent = "Cargue una imagen";
                    }
                }


        </script>

</body>
</html>
