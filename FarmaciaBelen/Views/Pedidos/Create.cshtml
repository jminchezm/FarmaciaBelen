@model FarmaciaBelen.Models.ViewModel.PedidoViewModel

@{
    ViewBag.Title = "Crear Pedido";
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Crear Pedido</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/css/Pedido/style.css" rel="stylesheet">
</head>
<body>
    <div class="container mt-4">
        <div class="card shadow">
            <div class="card-header bg-primary text-white">
                <h4 class="mb-0">Crear Pedido</h4>
            </div>
            <div class="card-body">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="row mb-2">
                        <div class="col-md-6">
                            <b>@Html.LabelFor(model => model.PEDIDO_ID, new { @class = "form-label" })</b>
                            @Html.TextBoxFor(model => model.PEDIDO_ID, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                        <div class="col-md-6">
                            <b>@Html.LabelFor(model => model.ESTADO_PEDIDO, new { @class = "form-label" })</b>
                            @Html.TextBoxFor(model => model.ESTADO_PEDIDO, new { @class = "form-control", @readonly = "readonly" })
                        </div>
                    </div>

                    <div class="row mb-2">
                        <div class="col-md-6">
                            <label class="form-label"><b>Proveedor</b></label>
                            @Html.DropDownListFor(m => m.PROVEEDOR_ID, ViewBag.Proveedores as SelectList, "Seleccione", new { @class = "form-select" })
                            @Html.ValidationMessageFor(m => m.PROVEEDOR_ID, null, new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            <label class="form-label"><b>Fecha estimada de entrega*</b></label>
                            @Html.TextBoxFor(m => m.FECHA_ENTREGA_ESTIMADA, new { @class = "form-control", type = "date" })
                            @Html.ValidationMessageFor(m => m.FECHA_ENTREGA_ESTIMADA, null, new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="mb-2">
                        <label class="form-label"><b>Observaciones</b></label>
                        @Html.TextAreaFor(m => m.OBSERVACIONES, new { @class = "form-control", rows = 1 })
                    </div>

                    <h5 class="mt-3"><b>Detalle de Pedido</b></h5> 
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="scroll-table-wrapper">
                        <table id="detallesTable" class="table table-bordered">
                            <thead class="table-secondary sticky-top bg-secondary text-white">
                                <tr>
                                    <th>Producto</th>
                                    <th>Referencia</th>
                                    <th>Cantidad</th>
                                    <th>Acción</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Detalles != null && Model.Detalles.Any())
                                {
                                    for (int i = 0; i < Model.Detalles.Count; i++)
                                    {
                                        <tr>
                                            <td>
                                                <select name="Detalles[@i].PRODUCTO_ID" class="form-select producto-select" onchange="mostrarImagen(this, @i)">
                                                    <option value="">Seleccione un producto</option>
                                                    @foreach (var producto in (List<FarmaciaBelen.Models.ViewModel.ProductoViewModel>)ViewBag.Productos)
                                                    {
                                                        <option value="@producto.PRODUCTO_ID" data-img="@producto.IMAGEN_URL" @(producto.PRODUCTO_ID == Model.Detalles[i].PRODUCTO_ID ? "selected" : "")>
                                                            @producto.PRODUCTO_NOMBRE
                                                        </option>
                                                    }
                                                </select>
                                            </td>
                                            <td><div id="img-preview-@i" class="mt-2"></div></td>
                                            <td>
                                                <input name="Detalles[@i].DETALLEPEDIDO_CANTIDAD" value="@Model.Detalles[i].DETALLEPEDIDO_CANTIDAD" type="number" class="form-control" min="1" required />
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-danger" onclick="eliminarFila(this)">Eliminar</button>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    
                    <div class="d-flex justify-content-center">
                        <button type="button" class="btn btn-outline-primary mb-3 mt-2" onclick="agregarFila()">Agregar Producto</button>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index")" class="btn btn-secondary">← Volver a la lista</a>
                        <button type="submit" class="btn btn-success">Guardar Pedido</button>
                    </div>
                }
            </div>
        </div>
    </div>

    <!-- Modal de confirmación -->
    <div class="modal fade" id="modalCreado" tabindex="-1" aria-labelledby="modalCreadoLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header bg-success text-white">
                    <h5 class="modal-title" id="modalCreadoLabel">Pedido creado</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    ¡Pedido registrado exitosamente!
                </div>
                <div class="modal-footer">
                    <a href="@Url.Action("Index")" class="btn btn-secondary">Ir al listado</a>
                    <button type="button" class="btn btn-primary" data-bs-dismiss="modal">Aceptar</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    @if (ViewBag.Creado != null && (bool)ViewBag.Creado)
    {
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                var modal = new bootstrap.Modal(document.getElementById('modalCreado'));
                modal.show();
            });
        </script>
    }

    <script>
        let index = @(Model.Detalles != null ? Model.Detalles.Count : 0);
        const productos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Productos));

        function agregarFila() {
            let opciones = '';
            productos.forEach(p => {
                opciones += `<option value="${p.PRODUCTO_ID}" data-img="${p.IMAGEN_URL}">${p.PRODUCTO_NOMBRE}</option>`;
            });

            const row = `
                <tr>
                    <td>
                        <select name="Detalles[${index}].PRODUCTO_ID" class="form-select producto-select" onchange="mostrarImagen(this, ${index})">
                            <option value="">Seleccione un producto</option>
                            ${opciones}
                        </select>
                    </td>
                    <td><div id="img-preview-${index}" class="mt-2"></div></td>
                    <td><input name="Detalles[${index}].DETALLEPEDIDO_CANTIDAD" type="number" class="form-control" min="1" required /></td>
                    <td><button type="button" class="btn btn-danger" onclick="eliminarFila(this)">Eliminar</button></td>
                </tr>`;
            document.querySelector("#detallesTable tbody").insertAdjacentHTML('beforeend', row);
            index++;
        }

        function mostrarImagen(select, index) {
            const selectedOption = select.options[select.selectedIndex];
            const imgUrl = selectedOption.getAttribute("data-img");
            const preview = document.getElementById(`img-preview-${index}`);
            if (imgUrl) {
                preview.innerHTML = `<img src="${imgUrl}" alt="Imagen del producto" style="max-width:100px;" class="img-thumbnail" />`;
            } else {
                preview.innerHTML = '';
            }
        }

        function eliminarFila(btn) {
            btn.closest('tr').remove();
        }

        document.addEventListener("DOMContentLoaded", function () {
            for (let i = 0; i < index; i++) {
                const select = document.querySelector(`select[name='Detalles[${i}].PRODUCTO_ID']`);
                if (select && select.value) {
                    mostrarImagen(select, i);
                }
            }
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
</body>
</html>
